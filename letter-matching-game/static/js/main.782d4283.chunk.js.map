{"version":3,"sources":["components/shared/Header.module.css","components/shared/Body.module.css","components/Statistics.module.css","modules/statistic.js","modules/timer.js","constants.js","utils/index.js","modules/game.js","modules/index.js","store.js","components/shared/Header.js","components/shared/Body.js","containers/SelectLevel.js","components/Statistics.js","containers/Statistics.js","components/Timer.js","containers/Timer.js","components/Desk.js","containers/Desk.js","containers/IsCompleted.js","App.js","serviceWorker.js","index.js","components/Desk.module.css"],"names":["module","exports","header","body","table","initialState","won","lost","bestTime","easy","normal","hard","setStatistic","statistics","dispatch","type","timer","setTimer","arguments","length","undefined","LEVELS","value","label","cols","rows","time","STATISTIC_LOCAL_STORAGE_KEY","getStatisticsFromLocalStorage","localStorage","getItem","JSON","parse","error","console","log","setStatisticsToLocalStorage","values","forEach","_ref","path","set","setItem","stringify","initializeGrid","level","cb","total","grid","i","letter","String","fromCharCode","Math","floor","random","push","shuffle","concat","Object","toConsumableArray","generateGrid","checkMatchingCards","_ref2","index","isMatch","visibledCards","eliminatedCards","nextVisibledCards","setVisibledCards","nextEliminatedCards","checkGameCompleted","convertMintuesStringToSecondsNumber","str","arr","split","seccondsToTimeString","timeInSeconds","pad","num","size","slice","parseFloat","toFixed","minutes","seconds","isPlaying","setLevel","setPlaying","setVisibleCard","getState","game","_checkMatchingCards","nextState","setTimeout","objectSpread","restartGame","resetGame","combineReducers","statistic","state","action","defineProperty","field","count","middleware","thunk","composedEnhancers","compose","apply","applyMiddleware","createStore","rootReducer","Header","children","react_default","a","createElement","className","styles","Body","SelectOption","Select","Option","SelectLevel","handleChange","_this","props","handleStart","_this$props","initGrid","_this$props2","this","levels","disabled","react","es_select","dropdownMatchSelectWidth","onChange","map","key","es_button","onClick","PureComponent","connect","components_Statistics","row","gutter","es_col","span","Statistics","TimerDumb","startTimer","startValue","start","countdown","startValues","addEventListener","checkTimerExpired","timerString","getTimeValues","toString","stopTimer","stop","removeEventListener","Timer","startGame","icon","getStartValue","stopGame","setStatistics","showFailureModal","Modal","confirm","title","content","okText","cancelText","style","color","onOk","onCancel","_this$props3","_this$props4","Timer_TimerDumb","DeskDumb","handleCardClick","isEliminated","onCardClick","renderCardByState","col","isCardVisibled","indexOf","isCardEliminated","card","hidden","_this2","levelObject","round","desk","Desk","Desk_DeskDumb","assign","IsCompleted","newGame","showCompleteModal","prevProps","App","containers_SelectLevel","containers_Statistics","containers_Timer","containers_Desk","containers_IsCompleted","Boolean","window","location","hostname","match","ReactDOM","render","es","store","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.782d4283.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1PS8I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Body_body__2OfF-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Statistics_table__ed1VP\"};","export const SET_STATISTIC = 'statistic/SET_STATISTIC'\nexport const SET_STATISTIC_WON_LOST = 'statistic/SET_STATISTIC_WON_LOST'\nexport const SET_STATISTIC_BEST_TIME = 'statistic/SET_STATISTIC_BEST_TIME'\n\nconst initialState = {\n  won: 0,\n  lost: 0,\n  bestTime: {\n    easy: '--:--',\n    normal: '--:--',\n    hard: '--:--'\n  }\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_STATISTIC:\n      return {\n        ...action.statistics\n      }\n\n    case SET_STATISTIC_WON_LOST:\n      return {\n        ...state,\n        [action.field]: action.count\n      }\n\n    case SET_STATISTIC_BEST_TIME:\n      return {\n        ...state,\n        bestTime: {\n          ...state.bestTime,\n          [action.level]: action.time\n        }\n      }\n\n    default:\n      return state\n  }\n}\n\nexport const setStatistic = (statistics) => {\n  return dispatch => {\n    dispatch({\n      type: SET_STATISTIC,\n      statistics\n    })\n  }\n}\n\nexport const setStatisticWonLost = (field, count) => {\n  return dispatch => {\n    dispatch({\n      type: SET_STATISTIC_WON_LOST,\n      field,\n      count\n    })\n  }\n}\n\nexport const setStatisticBestTime = (level, time) => {\n  return dispatch => {\n    dispatch({\n      type: SET_STATISTIC_WON_LOST,\n      level,\n      time\n    })\n  }\n}\n\n","export const SET_TIMER = 'timer/SET_TIMER'\n\nconst initialState = {\n  timer: ''\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_TIMER:\n      return {\n        ...state,\n        timer: action.timer\n      }\n\n    default:\n      return state\n  }\n}\n\nexport const setTimer = (timer = '') => {\n  return dispatch => {\n    dispatch({\n      type: SET_TIMER,\n      timer\n    })\n  }\n}\n","export const LEVELS = {\n  easy: {\n    value: 'easy',\n    label: 'Easy',\n    cols: 4,\n    rows: 4,\n    time: 2 // minutes\n  },\n  normal: {\n    value: 'normal',\n    label: 'Normal',\n    cols: 4,\n    rows: 4,\n    time: 1 // minutes\n  },\n  hard: {\n    value: 'hard',\n    label: 'Hard',\n    cols: 6,\n    rows: 6,\n    time: 2 // minutes\n  }\n}\n\nexport const STATISTIC_LOCAL_STORAGE_KEY = 'letter_matching_statistics'\n","import shuffle from 'lodash/shuffle'\nimport set from 'lodash/set'\nimport { LEVELS, STATISTIC_LOCAL_STORAGE_KEY } from '../constants'\n\nexport function getStatisticsFromLocalStorage() {\n  const statistics = localStorage.getItem(STATISTIC_LOCAL_STORAGE_KEY)\n\n  if (statistics && typeof statistics === 'string') {\n    try {\n      return JSON.parse(statistics)\n    } catch (error) {\n      console.log(error)\n\n      return false\n    }\n  }\n\n  return {\n    won: 0,\n    lost: 0,\n    bestTime: {\n      easy: '--:--',\n      normal: '--:--',\n      hard: '--:--'\n    }\n  }\n}\n\nexport function setStatisticsToLocalStorage(values = []) {\n  const statistics = getStatisticsFromLocalStorage()\n\n  values.forEach(({ path, value }) => {\n    if (path) {\n      set(statistics, path, value)\n    }\n  })\n\n  localStorage.setItem(STATISTIC_LOCAL_STORAGE_KEY, JSON.stringify(statistics))\n\n  return statistics\n}\n\nexport function randomLetter() {\n  return String.fromCharCode(65 + Math.floor(Math.random() * 26))\n}\n\nexport const generateGrid = (level = {}) => {\n  const { cols, rows } = level\n  const total = cols * rows / 2\n  const grid = []\n\n  for (let i = 0; i < total; i++) {\n    const letter = randomLetter()\n\n    grid.push(letter)\n  }\n\n  return shuffle([...grid, ...shuffle(grid)])\n}\n\nexport const initializeGrid = (level, cb) => {\n  if (LEVELS[level] && cb) {\n    const grid = generateGrid(LEVELS[level])\n\n    cb(grid)\n  }\n}\n\nexport const setVisibledCards = (visibledCards, index) => {\n  switch (visibledCards.length) {\n    case 0:\n      return [index]\n    case 1:\n      return [...visibledCards, index]\n    default:\n      return []\n  }\n}\n\nexport const checkMatchingCards = ({ grid, visibledCards, eliminatedCards }, index) => {\n  let isMatch\n  let nextVisibledCards = setVisibledCards(visibledCards, index)\n  let nextEliminatedCards = eliminatedCards\n\n  if (nextVisibledCards.length === 2) {\n    const firstCardIndex = nextVisibledCards[0]\n    const firstCard = grid[firstCardIndex]\n    const secondCard = grid[index]\n\n    if (firstCard === secondCard) {\n      isMatch = true\n      nextEliminatedCards = [...nextEliminatedCards, ...nextVisibledCards]\n    } else {\n      isMatch = false\n    }\n  }\n\n  return {\n    isMatch,\n    visibledCards: nextVisibledCards,\n    eliminatedCards: nextEliminatedCards\n  }\n}\n\nexport const checkGameCompleted = (grid, visibledCards, eliminatedCards) => {\n  if (grid.length && eliminatedCards.length &&\n      grid.length === eliminatedCards.length &&\n      visibledCards.length === 0) {\n    return true\n  }\n\n  return false\n}\n\nexport const convertMintuesStringToSecondsNumber = (str = '') => {\n  if (str) {\n    const arr = str.split(':')\n\n    return 1 * arr[0] * 60 + 1 * arr[1];\n  }\n\n  return false\n}\n\nexport const seccondsToTimeString = (timeInSeconds) => {\n  const pad = function(num, size) { return ('000' + num).slice(size * -1); }\n  const time = parseFloat(timeInSeconds).toFixed(3)\n  const minutes = Math.floor(time / 60) % 60\n  const seconds = Math.floor(time - minutes * 60)\n\n  return pad(minutes, 2) + ':' + pad(seconds, 2)\n}\n","import { checkMatchingCards } from '../utils'\n\nexport const SET_LEVEL = 'game/SET_LEVEL'\nexport const INITIALIZE_GRID = 'game/INITIALIZE_GRID'\nexport const SET_PLAYING = 'game/SET_PLAYING'\nexport const SET_VISIBLE_CARD = 'game/SET_VISIBLE_CARD'\nexport const MATCHING_SUCCESS = 'game/MATCHING_SUCCESS'\nexport const MATCHING_FAILURE = 'game/MATCHING_FAILURE'\nexport const RESTART_GAME = 'game/RESTART_GAME'\nexport const RESET_GAME = 'game/RESET_GAME'\n\nconst initialState = {\n  level: '',\n  grid: [],\n  isPlaying: false,\n  visibledCards: [],\n  eliminatedCards: []\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_LEVEL:\n      return {\n        ...state,\n        level: action.level\n      }\n\n    case INITIALIZE_GRID:\n      return {\n        ...state,\n        grid: action.grid\n      }\n\n    case SET_PLAYING:\n      return {\n        ...state,\n        isPlaying: action.value\n      }\n\n    case SET_VISIBLE_CARD:\n      return {\n        ...state,\n        ...action.nextState\n      }\n\n    case MATCHING_SUCCESS:\n      return {\n        ...state,\n        visibledCards: [],\n        eliminatedCards: action.eliminatedCards\n      }\n\n    case MATCHING_FAILURE:\n      return {\n        ...state,\n        visibledCards: []\n      }\n\n    case RESTART_GAME:\n      return {\n        ...state,\n        grid: [],\n        isPlaying: false,\n        visibledCards: [],\n        eliminatedCards: []\n      }\n\n    case RESET_GAME:\n      return {\n        ...initialState\n      }\n\n    default:\n      return state\n  }\n}\n\nexport const setLevel = (level = '') => {\n  return dispatch => {\n    dispatch({\n      type: SET_LEVEL,\n      level\n    })\n  }\n}\n\nexport const initializeGrid = (grid = []) => {\n  return dispatch => {\n    dispatch({\n      type: INITIALIZE_GRID,\n      grid\n    })\n  }\n}\n\nexport const setPlaying = (value = true) => {\n  return dispatch => {\n    dispatch({\n      type: SET_PLAYING,\n      value\n    })\n  }\n}\n\n\nexport const setVisibleCard = (index) => {\n  return (dispatch, getState) => {\n    const { game } = getState()\n    const { isMatch, visibledCards, eliminatedCards } = checkMatchingCards(game, index)\n\n    dispatch({\n      type: SET_VISIBLE_CARD,\n      nextState: {\n        visibledCards\n      }\n    })\n\n    if (isMatch !== undefined) {\n      setTimeout(() => {\n        const type = isMatch ? MATCHING_SUCCESS : MATCHING_FAILURE\n        const nextState = isMatch ? { eliminatedCards } : {}\n\n        dispatch({\n          type,\n          ...nextState\n        })\n      }, 1000);\n    }\n  }\n}\n\nexport const restartGame = () => {\n  return dispatch => {\n    dispatch({\n      type: RESTART_GAME\n    })\n  }\n}\n\nexport const resetGame = () => {\n  return dispatch => {\n    dispatch({\n      type: RESET_GAME\n    })\n  }\n}","import { combineReducers } from 'redux'\nimport statistic from './statistic'\nimport timer from './timer'\nimport game from './game'\n\nexport default combineReducers({\n  statistic,\n  timer,\n  game\n})\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './modules'\n\nconst initialState = {}\nconst enhancers = []\nconst middleware = [thunk]\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension())\n  }\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n)\n\nexport default createStore(\n  rootReducer,\n  initialState,\n  composedEnhancers\n)\n","import React from 'react'\nimport styles from './Header.module.css'\n\nexport default ({ children }) => {\n  return (\n    <header className={styles.header}>{children}</header>\n  )\n}\n","import React from 'react'\nimport styles from './Body.module.css'\n\nexport default ({ children }) => {\n  return (\n    <section className={styles.body}>{children}</section>\n  )\n}\n","import React, { PureComponent, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport { Select, Button } from 'antd'\nimport values from 'lodash/values'\nimport { LEVELS } from '../constants'\nimport { setLevel, initializeGrid } from '../modules/game'\nimport { initializeGrid as initGrid } from '../utils'\n\nconst SelectOption = Select.Option\n\nclass SelectLevel extends PureComponent {\n  handleChange = (value) => {\n    const { dispatch } = this.props\n\n    dispatch(setLevel(value))\n  }\n\n  handleStart = () => {\n    const { level, dispatch } = this.props\n\n    initGrid(level, grid => dispatch(initializeGrid(grid)))\n  }\n\n  render() {\n    const { level, grid, isPlaying } = this.props\n    const levels = values(LEVELS)\n    const disabled = grid.length > 0 || isPlaying\n\n    return (\n      <Fragment>\n        <Select\n          value={level}\n          dropdownMatchSelectWidth={false}\n          disabled={disabled}\n          onChange={this.handleChange}\n        >\n          <SelectOption value=\"\">Select level</SelectOption>\n          {levels.map(level => (\n            <SelectOption\n              key={level.value}\n              value={level.value}\n            >\n              {level.label}\n            </SelectOption>\n          ))}\n        </Select>\n\n        <Button\n          type=\"primary\"\n          className=\"margin-left\"\n          disabled={!level || disabled}\n          onClick={this.handleStart}\n        >\n          Start\n        </Button>\n      </Fragment>\n    )\n  }\n}\n\nexport default connect(state => state.game)(SelectLevel)\n","import React from 'react'\nimport { Row, Col } from 'antd'\nimport styles from './Statistics.module.css'\n\nexport default ({ won, lost, bestTime }) => {\n  return (\n    <div>\n      <Row gutter={16}>\n        <Col span={2}>Won:</Col>\n        <Col span={4}>{won}</Col>\n      </Row>\n      <Row gutter={16}>\n        <Col span={2}>Lost:</Col>\n        <Col span={4}>{lost}</Col>\n      </Row>\n      <Row gutter={16} className=\"margin-top\">\n        <Col span={2}>Best time:</Col>\n        <Col span={4}>\n          <table className={styles.table}>\n            <thead>\n              <tr>\n                <th>Easy</th>\n                <th>Normal</th>\n                <th>Hard</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{bestTime.easy}</td>\n                <td>{bestTime.normal}</td>\n                <td>{bestTime.hard}</td>\n              </tr>\n            </tbody>\n          </table>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { setStatistic } from '../modules/statistic'\nimport { getStatisticsFromLocalStorage } from '../utils'\nimport StatisticsDumb from '../components/Statistics'\n\nclass Statistics extends PureComponent {\n  componentDidMount() {\n    const statistics = getStatisticsFromLocalStorage()\n\n    if (typeof statistics === 'object') {\n      const { dispatch } = this.props\n\n      dispatch(setStatistic(statistics))\n    }\n  }\n\n  render() {\n    return <StatisticsDumb {...this.props} />\n  }\n}\n\nexport default connect(state => state.statistic)(Statistics)\n","import React, { PureComponent, Fragment } from 'react'\nimport { Icon } from 'antd'\nimport Timer from 'easytimer.js';\n\nexport default class TimerDumb extends PureComponent {\n  componentDidMount() {\n    this.timer = new Timer();\n\n    this.startTimer()\n    this.props.startGame()\n  }\n\n  componentWillUnmount() {\n    this.stopTimer()\n  }\n\n  startTimer = () => {\n    if (this.timer) {\n      const { startValue } = this.props\n\n      this.timer\n        .start({\n          countdown: true,\n          startValues: { seconds: startValue }\n        })\n      this.timer.addEventListener('secondsUpdated', () => {\n        const { onChange, checkTimerExpired, checkGameCompleted } = this.props\n        const timerString = this.timer.getTimeValues().toString(['minutes', 'seconds'])\n\n        if (onChange) {\n          onChange(timerString)\n        }\n\n        if (checkGameCompleted() === true) {\n          this.stopTimer()\n        } else {\n          checkTimerExpired(timerString)\n        }\n      });\n    }\n  }\n\n  stopTimer = () => {\n    if (this.timer) {\n      this.timer.stop()\n      this.timer.removeEventListener('secondsUpdated')\n    }\n  }\n\n  render() {\n    const { value } = this.props\n\n    return (\n      <Fragment><Icon type=\"clock-circle\" /> Time remaining: {value || 'Loading...'}</Fragment>\n    )\n  }\n}\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { Modal, Icon } from 'antd'\nimport { setStatistic } from '../modules/statistic'\nimport { setTimer } from '../modules/timer'\nimport { initializeGrid, setPlaying, restartGame, resetGame } from '../modules/game'\nimport TimerDumb from '../components/Timer'\nimport { LEVELS } from '../constants'\nimport { setStatisticsToLocalStorage, initializeGrid as initGrid, checkGameCompleted } from '../utils'\n\nclass Timer extends PureComponent {\n  getStartValue = () => {\n    const { level } = this.props\n\n    return LEVELS[level].time * 60 // seconds\n  }\n\n  startGame = () => {\n    const { dispatch } = this.props\n\n    dispatch(setPlaying())\n  }\n\n  restartGame = () => {\n    const { level, dispatch } = this.props\n\n    this.startGame()\n    initGrid(level, grid => dispatch(initializeGrid(grid)))\n  }\n\n  stopGame = () => {\n    const { dispatch } = this.props\n\n    dispatch(setTimer(''))\n    dispatch(restartGame())\n  }\n\n  resetGame = () => {\n    const { dispatch } = this.props\n\n    dispatch(resetGame())\n  }\n\n  setStatistics = () => {\n    const { lost, dispatch } = this.props\n    const statistics = setStatisticsToLocalStorage([{\n      path: 'lost',\n      value: lost + 1\n    }])\n\n    dispatch(setStatistic(statistics))\n  }\n\n  showFailureModal = () => {\n    Modal.confirm({\n      title: 'Oops!!!',\n      content: 'You just ran out of time. Better luck next time.',\n      okText: 'Try again',\n      cancelText: 'Too hard? Try different level',\n      icon: <Icon type=\"close-circle\" style={{ color: 'red' }} />,\n      onOk: () => {\n        this.restartGame()\n      },\n      onCancel: () => {\n        this.resetGame()\n      },\n    });\n  }\n\n  checkTimerExpired = (timer) => {\n    const { isPlaying } = this.props\n\n    if (isPlaying && timer === '00:00') {\n      this.stopGame()\n      this.setStatistics()\n      this.showFailureModal()\n    }\n  }\n\n  checkGameCompleted = () => {\n    const { grid, visibledCards, eliminatedCards } = this.props\n\n    return checkGameCompleted(grid, visibledCards, eliminatedCards)\n  }\n\n  handleChange = (value) => {\n    const { dispatch } = this.props\n\n    dispatch(setTimer(value))\n  }\n\n  render() {\n    const { grid, timer } = this.props\n\n    if (grid.length > 0) {\n      return (\n        <TimerDumb\n          value={timer}\n          startValue={this.getStartValue()}\n          startGame={this.startGame}\n          onChange={this.handleChange}\n          checkTimerExpired={this.checkTimerExpired}\n          checkGameCompleted={this.checkGameCompleted}\n        />\n      )\n    }\n\n    return null\n  }\n}\n\nexport default connect(state => ({ ...state.game, ...state.timer, ...state.statistic }))(Timer)\n","import React, { PureComponent } from 'react'\nimport { Row, Col } from 'antd'\nimport styles from './Desk.module.css'\nimport { LEVELS } from '../constants'\n\nexport default class DeskDumb extends PureComponent {\n  handleCardClick = (isEliminated, index) => {\n    const { visibledCards, onCardClick } = this.props\n\n    if (!isEliminated && visibledCards.length < 2) {\n      return onCardClick(index)\n    }\n\n    return null\n  }\n\n  renderCardByState = (col, letter, index) => {\n    const { visibledCards, eliminatedCards } = this.props\n    const isCardVisibled = visibledCards.indexOf(index) > -1\n    const isCardEliminated = eliminatedCards.indexOf(index) > -1\n\n    return (\n      <Col key={letter + index} span={col}>\n        <div\n          className={`${styles.card} ${isCardEliminated ? styles.hidden : ''}`}\n          onClick={() => this.handleCardClick(isCardEliminated, index)}\n        >\n          {isCardVisibled && letter}\n        </div>\n      </Col>\n    )\n  }\n\n  render() {\n    const { level, grid } = this.props\n    const levelObject = LEVELS[level]\n    const totalCols = Math.round(grid.length / levelObject.cols)\n    const col = 24 / totalCols\n\n    return (\n      <div className={styles.desk}>\n        <Row gutter={2} type=\"flex\">\n          {grid.map((letter, index) => this.renderCardByState(col, letter, index))}\n        </Row>\n      </div>\n    )\n  }\n}\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { setVisibleCard } from '../modules/game'\nimport DeskDumb from '../components/Desk'\n\nclass Desk extends PureComponent {\n  handleCardClick = (index) => {\n    const { dispatch } = this.props\n\n    dispatch(setVisibleCard(index))\n  }\n\n  render() {\n    const { isPlaying } = this.props\n\n    if (isPlaying) {\n      return <DeskDumb {...this.props} onCardClick={this.handleCardClick} />\n    }\n\n    return null\n  }\n}\n\nexport default connect(state => state.game)(Desk)\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { Modal, Icon } from 'antd'\nimport { initializeGrid, setPlaying, restartGame, resetGame } from '../modules/game'\nimport { setStatistic } from '../modules/statistic'\nimport { setTimer } from '../modules/timer'\nimport { LEVELS } from '../constants'\nimport {\n    setStatisticsToLocalStorage,\n    initializeGrid as initGrid,\n    checkGameCompleted,\n    convertMintuesStringToSecondsNumber,\n    seccondsToTimeString\n} from '../utils'\n\nclass IsCompleted extends PureComponent {\n  componentDidUpdate(prevProps) {\n    const { grid, visibledCards, eliminatedCards } = this.props\n\n    if (checkGameCompleted(grid, visibledCards, eliminatedCards) === true) {\n      this.stopGame()\n      this.setStatistics()\n      this.showCompleteModal()\n    }\n  }\n\n  startGame = () => {\n    const { dispatch } = this.props\n\n    dispatch(setPlaying())\n  }\n\n  restartGame = () => {\n    const { level, dispatch } = this.props\n\n    this.startGame()\n    initGrid(level, grid => dispatch(initializeGrid(grid)))\n  }\n\n  stopGame = () => {\n    const { dispatch } = this.props\n\n    dispatch(restartGame())\n  }\n\n  newGame = () => {\n    const { dispatch } = this.props\n\n    dispatch(setTimer(''))\n    dispatch(resetGame())\n  }\n\n  setStatistics = () => {\n    const { level, timer, won, dispatch } = this.props\n    const initialTimerInSeconds = LEVELS[level].time * 60\n    const timerInSeconds = convertMintuesStringToSecondsNumber(timer)\n    const bestTime = initialTimerInSeconds - timerInSeconds\n\n    const statistics = setStatisticsToLocalStorage([{\n      path: 'won',\n      value: won + 1\n    }, {\n      path: `bestTime.${level}`,\n      value: seccondsToTimeString(bestTime)\n    }])\n\n    dispatch(setStatistic(statistics))\n  }\n\n  showCompleteModal = () => {\n    Modal.confirm({\n      title: 'Congratulations!!!',\n      content: 'Your memory is still useful.',\n      okText: 'Try again',\n      cancelText: 'Too easy? Try different level',\n      icon: <Icon type=\"check-circle\" style={{ color: 'green' }} />,\n      onOk: () => this.restartGame(),\n      onCancel: () => this.newGame(),\n    });\n  }\n\n  render() {\n    return null\n  }\n}\n\nexport default connect(state => ({ ...state.game, ...state.timer, ...state.statistic }))(IsCompleted)\n","import React from 'react';\nimport 'antd/dist/antd.css'\nimport './App.css';\nimport Header from './components/shared/Header'\nimport Body from './components/shared/Body'\nimport SelectLevel from './containers/SelectLevel'\nimport Statistics from './containers/Statistics'\nimport Timer from './containers/Timer'\nimport Desk from './containers/Desk'\nimport IsCompleted from './containers/IsCompleted'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header>\n        <SelectLevel />\n        <div className=\"margin-top\">\n          <Statistics />\n        </div>\n      </Header>\n\n      <Body>\n        <Timer />\n        <div className=\"margin-top\">\n          <Desk />\n          <IsCompleted />\n        </div>\n      </Body>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport store from './store'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render((\n  <Provider store={store}>\n    <App />\n  </Provider>),\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Desk_card__2u5gQ\",\"hidden\":\"Desk_hidden__2DxEg\"};"],"sourceRoot":""}